<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.rabbitmq</groupId>
  <artifactId>stream-perf-test</artifactId>
  <version>1.4.0-SNAPSHOT</version>

  <name>RabbitMQ Stream Performance Testing Tool</name>
  <description>A Java-based performance testing tool for RabbitMQ Stream.</description>
  <url>https://www.rabbitmq.com</url>

  <licenses>
    <license>
      <name>ASL 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.html</url>
      <distribution>repo</distribution>
    </license>
    <license>
      <name>MPL 2.0</name>
      <url>https://www.mozilla.org/en-US/MPL/2.0/</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <email>info@rabbitmq.com</email>
      <name>Team RabbitMQ</name>
      <organization>Broadcom Inc. and its subsidiaries.</organization>
      <organizationUrl>https://rabbitmq.com</organizationUrl>
    </developer>
  </developers>

  <organization>
    <name>Broadcom Inc. and its subsidiaries.</name>
    <url>https://www.rabbitmq.com</url>
  </organization>

  <scm>
    <url>https://github.com/rabbitmq/rabbitmq-stream-perf-test</url>
    <connection>scm:git:git://github.com/rabbitmq/rabbitmq-stream-perf-test.git</connection>
    <developerConnection>scm:git:https://github.com/rabbitmq/rabbitmq-stream-perf-test.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <stream-client.version>0.21.0</stream-client.version>
    <slf4j.version>2.0.16</slf4j.version>
    <logback.version>1.5.12</logback.version>
    <netty.version>4.1.115.Final</netty.version>
    <metrics.version>4.2.29</metrics.version>
    <micrometer.version>1.14.2</micrometer.version>
    <picocli.version>4.7.6</picocli.version>
    <guava.version>33.3.1-jre</guava.version>
    <jgroups.version>5.4.0.Final</jgroups.version>
    <jgroups-kubernetes.version>2.0.2.Final</jgroups-kubernetes.version>
    <junit.jupiter.version>5.11.4</junit.jupiter.version>
    <assertj.version>3.26.3</assertj.version>
    <spotless.check.skip>true</spotless.check.skip>
    <commons-lang3.version>3.13.0</commons-lang3.version>
    <commons-codec.version>1.16.0</commons-codec.version>
    <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
    <maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
    <spring-boot-maven-plugin.version>2.7.18</spring-boot-maven-plugin.version>
    <checksum.maven.plugin.version>1.11</checksum.maven.plugin.version>
    <maven.gpg.plugin.version>3.2.7</maven.gpg.plugin.version>
    <buildnumber.plugin.version>3.2.1</buildnumber.plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven.jar.plugin.version>3.4.2</maven.jar.plugin.version>
    <build-helper-maven-plugin.version>3.4.0</build-helper-maven-plugin.version>
    <maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
    <asciidoctor.maven.plugin.version>3.1.1</asciidoctor.maven.plugin.version>
    <asciidoctorj.version>3.0.0</asciidoctorj.version>
    <asciidoctorj.diagram.version>2.3.1</asciidoctorj.diagram.version>
    <spotless.version>2.43.0</spotless.version>
    <google-java-format.version>1.21.0</google-java-format.version>
    <spotbugs-maven-plugin.version>4.8.6.6</spotbugs-maven-plugin.version>
    <spotbugs.version>4.8.6</spotbugs.version>
    <!-- for documentation -->
    <broker.version>4.0</broker.version>
    <!-- to sign artifacts when releasing -->
    <gpg.keyname>6026DFCA</gpg.keyname>
    <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <finalName>stream-perf-test</finalName>
    <maven.packagecloud.wagon.version>0.0.6</maven.packagecloud.wagon.version>
    <nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>

    <gpg.skip>true</gpg.skip>
  </properties>

  <dependencies>

    <dependency>
      <groupId>com.rabbitmq</groupId>
      <artifactId>stream-client</artifactId>
      <version>${stream-client.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>

    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>${picocli.version}</version>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>${metrics.version}</version>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
      <version>${micrometer.version}</version>
    </dependency>

    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
      <version>${micrometer.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport-native-epoll</artifactId>
      <version>${netty.version}</version>
      <classifier>linux-x86_64</classifier>
    </dependency>

    <dependency>
      <groupId>org.jgroups</groupId>
      <artifactId>jgroups</artifactId>
      <version>${jgroups.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jgroups.kubernetes</groupId>
      <artifactId>jgroups-kubernetes</artifactId>
      <version>${jgroups-kubernetes.version}</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <version>${spotbugs.version}</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.jupiter.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>

    <finalName>${finalName}</finalName>

    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <testResources>
      <testResource>
        <directory>${basedir}/src/test/resources</directory>
      </testResource>
    </testResources>

    <plugins>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <release>11</release>
          <compilerArgs>
            <arg>-Xlint:deprecation</arg>
            <arg>-Xlint:unchecked</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/*TestSuite.java</exclude>
          </excludes>
          <argLine>${test-arguments}</argLine>
          <systemPropertyVariables>
            <rabbitmqctl.bin>DOCKER:rabbitmq</rabbitmqctl.bin>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven-clean-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <configuration>
          <propertiesEncoding>${project.build.sourceEncoding}</propertiesEncoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>${asciidoctor.maven.plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctorj</artifactId>
            <version>${asciidoctorj.version}</version>
          </dependency>
          <dependency>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctorj-diagram</artifactId>
            <version>${asciidoctorj.diagram.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <sourceDirectory>src/docs/asciidoc</sourceDirectory>
          <doctype>article</doctype>
          <embedAssets>true</embedAssets>
          <requires>
            <require>asciidoctor-diagram</require>
          </requires>
          <attributes>
            <project-artifact-id>${project.artifactId}</project-artifact-id>
            <project-version>${project.version}</project-version>
            <netty-version>${netty.version}</netty-version>
            <build-number>${buildNumber}</build-number>
            <broker-version>${broker.version}</broker-version>
            <imagesdir>./images</imagesdir>
            <idprefix />
            <idseparator>-</idseparator>
            <source-highlighter>coderay</source-highlighter>
            <test-examples>../../test/java/com/rabbitmq/stream/docs</test-examples>
            <build-directory>${project.build.directory}</build-directory>
          </attributes>

        </configuration>
        <executions>
          <execution>
            <id>generate-html</id>
            <phase>pre-site</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <backend>html5</backend>
              <attributes>
                <toc>left</toc>
                <toclevels>5</toclevels>
                <icons>font</icons>
                <sectanchors>true</sectanchors>
              </attributes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>${maven.gpg.plugin.version}</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>sign</goal>
            </goals>
            <configuration>
              <keyname>${gpg.keyname}</keyname>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>${buildnumber.plugin.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
          <revisionOnScmFailure>unknown</revisionOnScmFailure>
          <shortRevisionLength>7</shortRevisionLength>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <configuration>
          <java>
            <googleJavaFormat>
              <version>${google-java-format.version}</version>
              <style>GOOGLE</style>
            </googleJavaFormat>
          </java>
<!--          <ratchetFrom>origin/main</ratchetFrom>-->
          <licenseHeader> <!-- specify either content or file, but not both -->
              <content>// Copyright (c) $YEAR Broadcom. All Rights Reserved.
              // The term "Broadcom" refers to Broadcom Inc. and/or its subsidiaries.
              //
              // This software, the RabbitMQ Stream Performance Testing Tool, is dual-licensed under the
              // Mozilla Public License 2.0 ("MPL"), and the Apache License version 2 ("ASL").
              // For the MPL, please see LICENSE-MPL-RabbitMQ. For the ASL,
              // please see LICENSE-APACHE2.
              //
              // This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND,
              // either express or implied. See the LICENSE file for specific language governing
              // rights and limitations of this software.
              //
              // If you have any questions regarding licensing, please contact us at
              // info@rabbitmq.com.
            </content>
          </licenseHeader>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot-maven-plugin.version}</version>
        <configuration>
          <excludeGroupIds>com.github.spotbugs</excludeGroupIds>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.nicoulaj.maven.plugins</groupId>
        <artifactId>checksum-maven-plugin</artifactId>
        <version>${checksum.maven.plugin.version}</version>
        <configuration>
          <fileSets>
            <fileSet>
              <directory>${project.build.directory}</directory>
              <includes>
                <include>*.jar</include>
              </includes>
            </fileSet>
          </fileSets>
          <algorithms>
            <algorithm>MD5</algorithm>
            <algorithm>SHA-256</algorithm>
          </algorithms>
        </configuration>
        <executions>
          <execution>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>*.jar</include>
                  </includes>
                </fileSet>
              </fileSets>
              <algorithms>
                <algorithm>MD5</algorithm>
                <algorithm>SHA-256</algorithm>
              </algorithms>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>${spotbugs.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>io.packagecloud.maven.wagon</groupId>
        <artifactId>maven-packagecloud-wagon</artifactId>
        <version>${maven.packagecloud.wagon.version}</version>
      </extension>
    </extensions>
  </build>

  <profiles>

    <profile>
      <id>jvm-test-arguments-java-21-and-more</id>
      <activation>
        <jdk>[21,)</jdk>
      </activation>
      <properties>
        <test-arguments>-XX:+EnableDynamicAgentLoading</test-arguments>
      </properties>
    </profile>

  </profiles>

   <repositories>
     <repository>
       <releases>
         <enabled>false</enabled>
       </releases>
       <snapshots>
         <enabled>true</enabled>
       </snapshots>
       <id>sonatype</id>
       <name>Sonatype Maven 2 Snapshot Repository</name>
       <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
     </repository>
   </repositories>

</project>
